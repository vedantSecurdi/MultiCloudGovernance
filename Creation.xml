<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule created="1699607427413" id="0a00020f8bad1e74818bb87f39550960" language="beanshell" modified="1700111283260" name="objectcounter" significantModified="1700111283260">
  <Signature>
    <Inputs>
      <Argument name="classname"/>
    </Inputs>
  </Signature>
  <Source>
import sailpoint.object.WorkItem;
import sailpoint.object.Bundle;
import sailpoint.object.context;
import sailpoint.object.RemediationItem;
import sailpoint.object.Task;
import sailpoint.object.Filter;
import sailpoint.object.QueryOptions;
import sailpoint.api;
import java.util.*;
import sailpoint.object.SailPointObject;
import sailpoint.tools.*;
import sailpoint.api.Workflower;
import sailpoint.object.AuditEvent;

String Wtype = "Remediation";
Filter filter = Filter.eq("type", Wtype);
QueryOptions queryOptions = new QueryOptions();
queryOptions.addFilter(filter);
List RemworkItems = context.getObjects(WorkItem.class,queryOptions);

for (WorkItem w : RemworkItems) 
{
    if (w.getDescription().contains("Role Composition") || w.getDescription().contains("Remove required role")) 
    {
        List RI = w.getRemediationItems();
   
        for(RemediationItem R : RI)
            {
                String Desc = R.getDescription();
                String[] parts = Desc.split("role '");
                String sp = parts[1];
                String[] parts2 = sp.split("'");
                String sp1 = parts2[0];
                char charToRemove = '\'';
                String IString = sp1.replace(String.valueOf(charToRemove), "");
                String sp2 = parts[2];
                String BString = sp2.replace(String.valueOf(charToRemove), "");
                Bundle Bbundle = context.getObjectByName(Bundle.class, BString);
                Bundle Ibundle = context.getObjectByName(Bundle.class, IString);
                
                Bbundle.removeRequirement(Ibundle);
                  
                context.saveObject(Bbundle);
                AuditEvent ae = new AuditEvent();
                String action = "Role Composition Certification";
                ae.setAction(action);
                String launcher = "Automatic Workitem Resolution";
                ae.setSource(launcher);
                ae.setTarget("Removed "+IString+" from "+BString);
                
                context.saveObject(ae);
                context.commitTransaction();
          
                
                
            }
 w.setState(WorkItem.State.Finished);
 w.setCompleter("Automated");
 w.setCompletionComments("Process Completed in Background");
 Workflower workflower = new Workflower(context);  
 workflower.process(w, false);

 context.decache(w);
  
    }
    
}

//return state();
//Workitem States - Cancelled, Expired, Finished, Pending, Rejected, Returned

</Source>
</Rule>
